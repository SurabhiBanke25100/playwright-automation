Install playwright :
   npm init playwright@latest   (for latest version)
   npm install -D @playwright/test
   npx playwright install

Run the test in headed/debug mode:
   npx playwright test --headed --debug

If u face any problem related to unauthorised access as shown in below error:
      npx : File C:\Program Files\nodejs\npx.ps1 cannot be loaded because running scripts is disabled on this system. For more information, see about_Execution_Policies at 
       https:/go.microsoft.com/fwlink/?LinkID=135170.
       At line:1 char:1
       + npx playwright test
         + ~~~
    + CategoryInfo          : SecurityError: (:) [], PSSecurityException      
    + FullyQualifiedErrorId : UnauthorizedAccess
then,
     open powershell then execute command: To temporary byepass the execution policy
         Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
     click "Y" , press "Enter".

then , enter the command in vscode and check:
     npx playwright test 

To check playwright version:
    npm playwright -v

To check commands to be use in playwright:
    npx playwright -h

Install   extensions of playwright:
    playwright  test for vscode by microsoft

Press command palette (ctrl+shift+p)  :type playwright install  then select the browsers and click "OK".

run comands:
    npx playwright test    : For running all testcases in all browsers in headless mode.
    npx playwright test --workers 3   : running with 3 workers in parallel
    npx playwright test  one.spec.js   : running specific test file
    npx playwright test  one two  :   runs files that have one or two in the filename.
    npx playwright test  --project=chromium  : runs on a specific browser
    npx playwright test  --headed  : runs tests in headed mode
    npx playwright test  -debug :    debug tests  
 
To run the codegen:
    npx playwright codegen https://example.com
    
To integrate the reportportal with playwright
   npm install --save-dev @reportportal/agent-js-playwright

To add capabilities in configuration file to integrate reportportal :
   reporter: [
    ['@reportportal/agent-js-playwright', {  // Add ReportPortal reporter to Playwright config
      endpoint: 'http://localhost:8080/api/v1',  // ReportPortal server URL (replace with your endpoint)
      project: 'playwright_project', // Replace with your ReportPortal project name
      token: 'playwright-api__XMIfcJbSVe0J7q_PVkAuuNfF9uoUfCkgO2lsMBdtgxXepubqDjXYSgz8ynoqjJn',  // ReportPortal user token
      launch: 'Playwright Test Run', // Launch name (can be dynamic)
      description: 'Playwright tests integrated with ReportPortal',  // Optional: A description
    }],
    ['list'],  // Optional: still show test results in the terminal
  ],
 
 The Reportportal local server:
    http://localhost:8080/ui 


--------------Note--------------------
Can you run Playwright & Robot Framework simultaneously with ReportPortal?

Yes, absolutely.

üîë Key Points:
‚úÖ What	üìå Details
Run in parallel	You can run both frameworks at the same time.
Report to same ReportPortal	Both can report to the same instance and project.
Separate launches	Use different launch names for each framework to avoid mixing results.
Real-time reporting	You'll see results from both frameworks live in ReportPortal.
Use tags/attributes	Add tags like framework:playwright or framework:robot for filtering.
‚ö†Ô∏è Tips:

‚ùå Don‚Äôt use the same launch name ‚Äî it will cause conflict.

‚úÖ Group results with attributes for better visibility in the UI.